package org.dmd.wsdl.server.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:442)
import java.util.ArrayList;                                                 // To support getMVCopy() - (BaseDMWGenerator.java:1181)
import java.util.Iterator;                                                  // Support copy of MV objects - (BaseDMWGenerator.java:2240)
import org.dmd.dmc.*;                                                       // If any attributes - (BaseDMWGenerator.java:1087)
import org.dmd.dmc.definitions.DmcDefinitionIF;                             // The object is a domain specific definition - (BaseDMWGenerator.java:411)
import org.dmd.dmc.definitions.DmcDefinitionSet;                            // Our base to provide definition set storage - (DMWGenerator.java:170)
import org.dmd.dmc.types.DefinitionName;                                    // Is named by - (BaseDMWGenerator.java:1062)
import org.dmd.dmc.types.DotName;                                           // To support the find method for definitions - (DSDefinitionModule.java:163)
import org.dmd.dms.ClassDefinition;                                         // Passing derived class def up the hierarchy - (BaseDMWGenerator.java:1067)
import org.dmd.dms.generated.dmo.MetaDMSAG;                                 // Attribute defFiles from the meta schema - (BaseDMWGenerator.java:897)
import org.dmd.dms.generated.dmw.StringIterableDMW;                         // For multi-valued String - (BaseDMWGenerator.java:2103)
import org.dmd.dms.generated.types.DmcTypeModifierMV;                       // Required for MODREC constructor - (BaseDMWGenerator.java:1071)
import org.dmd.wsdl.server.extended.WsdlDefinition;                         // Derived class - (BaseDMWGenerator.java:1248)
import org.dmd.wsdl.server.extended.WsdlDescription;                        // A definition from the WsdlModule Module - (DSDefinitionModule.java:174)
import org.dmd.wsdl.server.extended.WsdlInterface;                          // A definition from the WsdlModule Module - (DSDefinitionModule.java:174)
import org.dmd.wsdl.server.extended.WsdlModule;                             // Required for getModificationRecorder() - (BaseDMWGenerator.java:1076)
import org.dmd.wsdl.server.extended.WsdlOperation;                          // A definition from the WsdlModule Module - (DSDefinitionModule.java:174)
import org.dmd.wsdl.server.extended.WsdlService;                            // A definition from the WsdlModule Module - (DSDefinitionModule.java:174)
import org.dmd.wsdl.server.extended.XmlElement;                             // A definition from the WsdlModule Module - (DSDefinitionModule.java:174)
import org.dmd.wsdl.server.generated.dmw.WsdlModuleIterableDMW;             // For multi-valued WsdlModule - (BaseDMWGenerator.java:1709)
import org.dmd.wsdl.server.generated.dsd.WsdlModuleScopedInterface;         // Required to manage module definition - (DMWGenerator.java:169)
import org.dmd.wsdl.shared.generated.dmo.DmwsdlDMSAG;                       // Attribute dependsOnWsdlModule from the dmwsdl schema - (BaseDMWGenerator.java:897)
import org.dmd.wsdl.shared.generated.dmo.WsdlModuleDMO;                     // Class not auxiliary or abstract - (BaseDMWGenerator.java:1252)
import org.dmd.wsdl.shared.generated.types.WsdlModuleREF;                   // Required to access defined in module name - (DMWGenerator.java:180)



/**
 * <P>
 * Generated from the dmwsdl schema at version unknown
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:479)
 */
abstract public class WsdlModuleDMW extends WsdlDefinition implements DmcDefinitionIF, DmcNamedObjectIF, WsdlModuleScopedInterface {

    // Generated from: org.dmd.util.codegen.MemberManager.getFormattedMembers(MemberManager.java:59)
    // Called from: org.dmd.dmg.generators.DMWGenerator.dumpAdditionalWrapperDefinitions(DMWGenerator.java:203)
    DmcDefinitionSet<WsdlDefinition>      WsdlDefinitionDefs     = new DmcDefinitionSet<WsdlDefinition>("WsdlModule-allDefinitions");         // All definitions associated with this module
    DmcDefinitionSet<WsdlDescription>     WsdlDescriptionDefs    = new DmcDefinitionSet<WsdlDescription>("WsdlModule-WsdlDescriptionDefs");   // All WsdlDescription definitions
    DmcDefinitionSet<WsdlInterface>       WsdlInterfaceDefs      = new DmcDefinitionSet<WsdlInterface>("WsdlModule-WsdlInterfaceDefs");       // All WsdlInterface definitions
    DmcDefinitionSet<WsdlModule>          WsdlModuleDefs         = new DmcDefinitionSet<WsdlModule>("WsdlModule-WsdlModuleDefs");             // All WsdlModule definitions
    DmcDefinitionSet<WsdlOperation>       WsdlOperationDefs      = new DmcDefinitionSet<WsdlOperation>("WsdlModule-WsdlOperationDefs");       // All WsdlOperation definitions
    DmcDefinitionSet<WsdlService>         WsdlServiceDefs        = new DmcDefinitionSet<WsdlService>("WsdlModule-WsdlServiceDefs");           // All WsdlService definitions
    DmcDefinitionSet<XmlElement>          XmlElementDefs         = new DmcDefinitionSet<XmlElement>("WsdlModule-XmlElementDefs");             // All XmlElement definitions

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:558)
    public WsdlModuleDMW() {
        super(new WsdlModuleDMO(), org.dmd.wsdl.server.generated.DmwsdlSchemaAG._WsdlModule);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:564)
    public WsdlModuleDMW(DmcTypeModifierMV mods) {
        super(new WsdlModuleDMO(mods), org.dmd.wsdl.server.generated.DmwsdlSchemaAG._WsdlModule);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:606)
    public WsdlModule getModificationRecorder(){
        WsdlModule rc = new WsdlModule();
        rc.setName(getName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:627)
    public WsdlModuleDMW(WsdlModuleDMO obj) {
        super(obj, org.dmd.wsdl.server.generated.DmwsdlSchemaAG._WsdlModule);
    }

    public WsdlModule cloneIt() {
        WsdlModule rc = new WsdlModule();
        rc.setDmcObject(getDMO().cloneIt());
        return(rc);
    }

    public WsdlModuleDMO getDMO() {
        return((WsdlModuleDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:642)
    protected WsdlModuleDMW(WsdlModuleDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.getAccessFunctions(BaseDMWGenerator.java:1297)
    public DefinitionName getObjectName(){
        return(((WsdlModuleDMO) core).getName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((WsdlModuleDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof WsdlModuleDMW){
            return( getObjectName().equals( ((WsdlModuleDMW) obj).getObjectName()) );
        }
        return(false);
    }

    /**
     * @return The number of String items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1671)
    public int getDefFilesSize(){
        return(((WsdlModuleDMO) core).getDefFilesSize());
    }

    /**
     * @return true if there are no StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1679)
    public boolean getDefFilesIsEmpty(){
        if (((WsdlModuleDMO) core).getDefFilesSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1689)
    public boolean getDefFilesHasValue(){
        if (((WsdlModuleDMO) core).getDefFilesSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2107)
    public StringIterableDMW getDefFilesIterable(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__defFiles);
        if (attr == null)
            return(StringIterableDMW.emptyList);
        
        return(new StringIterableDMW(((WsdlModuleDMO) core).getDefFiles()));
    }

    /**
     * Adds another defFiles value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2133)
    public void addDefFiles(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).addDefFiles(value);
    }

    /**
     * Adds another defFiles value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2143)
    public void addDefFiles(String value){
        ((WsdlModuleDMO) core).addDefFiles(value);
    }

    /**
     * Returns true if the collection contains the defFiles value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2200)
    public boolean defFilesContains(String value){
        return(((WsdlModuleDMO) core).defFilesContains(value));
    }

    /**
     * @return A COPY of the collection of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2244)
    @SuppressWarnings("unchecked")
    public ArrayList<String> getDefFilesCopy(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__defFiles);
        if (attr == null)
            return(new ArrayList<String>());
        
        ArrayList<String> rc = new ArrayList<String>(attr.getMVSize());
        
        Iterator<String> it = (Iterator<String>) attr.getMV();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Deletes a defFiles value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2271)
    public void delDefFiles(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).delDefFiles(value);
    }

    /**
     * Deletes a defFiles value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2280)
    public void delDefFiles(String value){
        ((WsdlModuleDMO) core).delDefFiles(value);
    }

    /**
     * Removes the defFiles attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2292)
    public void remDefFiles(){
        ((WsdlModuleDMO) core).remDefFiles();
    }

    /**
     * @return The number of WsdlModule items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1671)
    public int getDependsOnWsdlModuleSize(){
        return(((WsdlModuleDMO) core).getDependsOnWsdlModuleSize());
    }

    /**
     * @return true if there are no WsdlModuleDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1679)
    public boolean getDependsOnWsdlModuleIsEmpty(){
        if (((WsdlModuleDMO) core).getDependsOnWsdlModuleSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any WsdlModuleDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1689)
    public boolean getDependsOnWsdlModuleHasValue(){
        if (((WsdlModuleDMO) core).getDependsOnWsdlModuleSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of WsdlModuleDMO objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1716)
    public WsdlModuleIterableDMW getDependsOnWsdlModuleIterable(){
        DmcAttribute<?> attr = core.get(DmwsdlDMSAG.__dependsOnWsdlModule);
        if (attr == null)
            return(WsdlModuleIterableDMW.emptyList);
        
        return(new WsdlModuleIterableDMW(((WsdlModuleDMO) core).getDependsOnWsdlModule()));
    }

    /**
     * Adds another dependsOnWsdlModule value.
     * @param value A value compatible with WsdlModule
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1773)
    public DmcAttribute<?> addDependsOnWsdlModule(WsdlModule value){
        DmcAttribute<?> attr = ((WsdlModuleDMO) core).addDependsOnWsdlModule(((WsdlModuleDMO)value.getDmcObject()));
        return(attr);
    }

    /**
     * Deletes a dependsOnWsdlModule value.
     * @param value The WsdlModule to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1823)
    public void delDependsOnWsdlModule(WsdlModule value){
        ((WsdlModuleDMO) core).delDependsOnWsdlModule(value.getDMO());
    }

    /**
     * @return A COPY of the collection of WsdlModule objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1887)
    public ArrayList<WsdlModule> getDependsOnWsdlModuleCopy(){
        DmcAttribute<?> attr = ((WsdlModuleDMO) core).get(DmwsdlDMSAG.__dependsOnWsdlModule);
        if (attr == null)
            return(new ArrayList<WsdlModule>());
        
        ArrayList<WsdlModule> rc = new ArrayList<WsdlModule>(attr.getMVSize());
        
        WsdlModuleIterableDMW it = getDependsOnWsdlModuleIterable();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Removes the dependsOnWsdlModule attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2292)
    public void remDependsOnWsdlModule(){
        ((WsdlModuleDMO) core).remDependsOnWsdlModule();
    }

    /**
     * @return The number of String items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1671)
    public int getDescriptionSize(){
        return(((WsdlModuleDMO) core).getDescriptionSize());
    }

    /**
     * @return true if there are no StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1679)
    public boolean getDescriptionIsEmpty(){
        if (((WsdlModuleDMO) core).getDescriptionSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1689)
    public boolean getDescriptionHasValue(){
        if (((WsdlModuleDMO) core).getDescriptionSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2107)
    public StringIterableDMW getDescriptionIterable(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__description);
        if (attr == null)
            return(StringIterableDMW.emptyList);
        
        return(new StringIterableDMW(((WsdlModuleDMO) core).getDescription()));
    }

    /**
     * Adds another description value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2133)
    public void addDescription(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).addDescription(value);
    }

    /**
     * Adds another description value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2143)
    public void addDescription(String value){
        ((WsdlModuleDMO) core).addDescription(value);
    }

    /**
     * Returns true if the collection contains the description value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2200)
    public boolean descriptionContains(String value){
        return(((WsdlModuleDMO) core).descriptionContains(value));
    }

    /**
     * @return A COPY of the collection of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2244)
    @SuppressWarnings("unchecked")
    public ArrayList<String> getDescriptionCopy(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__description);
        if (attr == null)
            return(new ArrayList<String>());
        
        ArrayList<String> rc = new ArrayList<String>(attr.getMVSize());
        
        Iterator<String> it = (Iterator<String>) attr.getMV();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Deletes a description value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2271)
    public void delDescription(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).delDescription(value);
    }

    /**
     * Deletes a description value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2280)
    public void delDescription(String value){
        ((WsdlModuleDMO) core).delDescription(value);
    }

    /**
     * Removes the description attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2292)
    public void remDescription(){
        ((WsdlModuleDMO) core).remDescription();
    }

    /**
     * @return The number of String items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1671)
    public int getLoadSchemaClassSize(){
        return(((WsdlModuleDMO) core).getLoadSchemaClassSize());
    }

    /**
     * @return true if there are no StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1679)
    public boolean getLoadSchemaClassIsEmpty(){
        if (((WsdlModuleDMO) core).getLoadSchemaClassSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1689)
    public boolean getLoadSchemaClassHasValue(){
        if (((WsdlModuleDMO) core).getLoadSchemaClassSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2107)
    public StringIterableDMW getLoadSchemaClassIterable(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__loadSchemaClass);
        if (attr == null)
            return(StringIterableDMW.emptyList);
        
        return(new StringIterableDMW(((WsdlModuleDMO) core).getLoadSchemaClass()));
    }

    /**
     * Adds another loadSchemaClass value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2133)
    public void addLoadSchemaClass(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).addLoadSchemaClass(value);
    }

    /**
     * Adds another loadSchemaClass value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2143)
    public void addLoadSchemaClass(String value){
        ((WsdlModuleDMO) core).addLoadSchemaClass(value);
    }

    /**
     * Returns true if the collection contains the loadSchemaClass value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2200)
    public boolean loadSchemaClassContains(String value){
        return(((WsdlModuleDMO) core).loadSchemaClassContains(value));
    }

    /**
     * @return A COPY of the collection of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2244)
    @SuppressWarnings("unchecked")
    public ArrayList<String> getLoadSchemaClassCopy(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__loadSchemaClass);
        if (attr == null)
            return(new ArrayList<String>());
        
        ArrayList<String> rc = new ArrayList<String>(attr.getMVSize());
        
        Iterator<String> it = (Iterator<String>) attr.getMV();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Deletes a loadSchemaClass value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2271)
    public void delLoadSchemaClass(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).delLoadSchemaClass(value);
    }

    /**
     * Deletes a loadSchemaClass value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2280)
    public void delLoadSchemaClass(String value){
        ((WsdlModuleDMO) core).delLoadSchemaClass(value);
    }

    /**
     * Removes the loadSchemaClass attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2292)
    public void remLoadSchemaClass(){
        ((WsdlModuleDMO) core).remLoadSchemaClass();
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1474)
    public DefinitionName getName(){
        return(((WsdlModuleDMO) core).getName());
    }

    /**
     * Sets name to the specified value.
     * @param value A value compatible with DmcTypeDefinitionName
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1584)
    public void setName(Object value) throws DmcValueException {
        ((WsdlModuleDMO) core).setName(value);
    }

    /**
     * Sets name to the specified value.
     * @param value DefinitionName
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1593)
    public void setName(DefinitionName value){
        ((WsdlModuleDMO) core).setName(value);
    }

    /**
     * Removes the name attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1619)
    public void remName(){
        ((WsdlModuleDMO) core).remName();
    }

    // Generated from: org.dmd.dms.DSDefinitionModule.getInterfaceMethodsImplementations(DSDefinitionModule.java:219)
    // Called from: org.dmd.dmg.generators.DMWGenerator.dumpAdditionalWrapperFunctions(DMWGenerator.java:211)
    /**
     * All definitions are added to the base definition collection.
     */
    void addWsdlDefinition(WsdlDefinition def){
        WsdlDefinitionDefs.add(def);
    }

    public int getWsdlDefinitionCount(){
        return(WsdlDefinitionDefs.size());
    }

    public WsdlDefinition getWsdlDefinition(DotName name){
        return(WsdlDefinitionDefs.getDefinition(name));
    }

    public Iterator<WsdlDefinition> getAllWsdlDefinition(){
        return(WsdlDefinitionDefs.values().iterator());
    }

    // Generated from: org.dmd.dms.DSDefinitionModule.getInterfaceMethodsImplementations(DSDefinitionModule.java:254)
    public void addWsdlDescription(WsdlDescription def){
        WsdlDescriptionDefs.add(def);
        addWsdlDefinition(def);
    }

    public int getWsdlDescriptionCount(){
        return(WsdlDescriptionDefs.size());
    }

    public WsdlDescription getWsdlDescription(DotName name){
        return(WsdlDescriptionDefs.getDefinition(name));
    }

    public Iterator<WsdlDescription> getAllWsdlDescription(){
        return(WsdlDescriptionDefs.values().iterator());
    }

    // Generated from: org.dmd.dms.DSDefinitionModule.getInterfaceMethodsImplementations(DSDefinitionModule.java:254)
    public void addWsdlInterface(WsdlInterface def){
        WsdlInterfaceDefs.add(def);
        addWsdlDefinition(def);
    }

    public int getWsdlInterfaceCount(){
        return(WsdlInterfaceDefs.size());
    }

    public WsdlInterface getWsdlInterface(DotName name){
        return(WsdlInterfaceDefs.getDefinition(name));
    }

    public Iterator<WsdlInterface> getAllWsdlInterface(){
        return(WsdlInterfaceDefs.values().iterator());
    }

    // Generated from: org.dmd.dms.DSDefinitionModule.getInterfaceMethodsImplementations(DSDefinitionModule.java:254)
    public void addWsdlOperation(WsdlOperation def){
        WsdlOperationDefs.add(def);
        addWsdlDefinition(def);
    }

    public int getWsdlOperationCount(){
        return(WsdlOperationDefs.size());
    }

    public WsdlOperation getWsdlOperation(DotName name){
        return(WsdlOperationDefs.getDefinition(name));
    }

    public Iterator<WsdlOperation> getAllWsdlOperation(){
        return(WsdlOperationDefs.values().iterator());
    }

    // Generated from: org.dmd.dms.DSDefinitionModule.getInterfaceMethodsImplementations(DSDefinitionModule.java:254)
    public void addWsdlService(WsdlService def){
        WsdlServiceDefs.add(def);
        addWsdlDefinition(def);
    }

    public int getWsdlServiceCount(){
        return(WsdlServiceDefs.size());
    }

    public WsdlService getWsdlService(DotName name){
        return(WsdlServiceDefs.getDefinition(name));
    }

    public Iterator<WsdlService> getAllWsdlService(){
        return(WsdlServiceDefs.values().iterator());
    }

    // Generated from: org.dmd.dms.DSDefinitionModule.getInterfaceMethodsImplementations(DSDefinitionModule.java:254)
    public void addXmlElement(XmlElement def){
        XmlElementDefs.add(def);
        addWsdlDefinition(def);
    }

    public int getXmlElementCount(){
        return(XmlElementDefs.size());
    }

    public XmlElement getXmlElement(DotName name){
        return(XmlElementDefs.getDefinition(name));
    }

    public Iterator<XmlElement> getAllXmlElement(){
        return(XmlElementDefs.values().iterator());
    }

    // Generated from: org.dmd.dmg.generators.DMWGenerator.dumpAdditionalWrapperFunctions(DMWGenerator.java:221)
    /**
     * This method indicates the name of the module from which this definition was loaded.
     */
    @Override
    public String getNameOfModuleWhereThisCameFrom(){
        WsdlModuleREF ref = ((WsdlModuleDMO) core).getDefinedInWsdlModule();
        return(ref.getName().getNameString());
    }


}
