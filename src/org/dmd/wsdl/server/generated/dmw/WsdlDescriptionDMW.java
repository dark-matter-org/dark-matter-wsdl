package org.dmd.wsdl.server.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:442)
import java.util.ArrayList;                                                     // Support for MULTI attribute - (BaseDMWGenerator.java:2226)
import java.util.Iterator;                                                      // Support copy of MV objects - (BaseDMWGenerator.java:2240)
import org.dmd.dmc.*;                                                           // If any attributes - (BaseDMWGenerator.java:1087)
import org.dmd.dmc.definitions.DmcDefinitionIF;                                 // The object is a domain specific definition - (BaseDMWGenerator.java:411)
import org.dmd.dmc.types.DefinitionName;                                        // Is named by - (BaseDMWGenerator.java:1062)
import org.dmd.dms.ClassDefinition;                                             // Passing derived class def up the hierarchy - (BaseDMWGenerator.java:1067)
import org.dmd.dms.generated.dmo.MetaDMSAG;                                     // Attribute description from the meta schema - (BaseDMWGenerator.java:897)
import org.dmd.dms.generated.dmw.StringIterableDMW;                             // For multi-valued String - (BaseDMWGenerator.java:2103)
import org.dmd.dms.generated.types.DmcTypeModifierMV;                           // Required for MODREC constructor - (BaseDMWGenerator.java:1071)
import org.dmd.wsdl.server.extended.WsdlDefinition;                             // Derived class - (BaseDMWGenerator.java:1248)
import org.dmd.wsdl.server.extended.WsdlDescription;                            // Required for getModificationRecorder() - (BaseDMWGenerator.java:1076)
import org.dmd.wsdl.server.extended.WsdlInterface;                              // Is reference type - (BaseDMWGenerator.java:1107)
import org.dmd.wsdl.server.extended.WsdlService;                                // Is reference type - (BaseDMWGenerator.java:1107)
import org.dmd.wsdl.server.generated.dmw.NameSpaceReferenceIterableDMW;         // For multi-valued NameSpaceReference - (BaseDMWGenerator.java:2103)
import org.dmd.wsdl.shared.generated.dmo.DmwsdlDMSAG;                           // Attribute nameSpace from the dmwsdl schema - (BaseDMWGenerator.java:897)
import org.dmd.wsdl.shared.generated.dmo.WsdlDescriptionDMO;                    // Class not auxiliary or abstract - (BaseDMWGenerator.java:1252)
import org.dmd.wsdl.shared.generated.types.NameSpaceReference;                  // Primitive type - (BaseDMWGenerator.java:1150)
import org.dmd.wsdl.shared.generated.types.WsdlInterfaceREF;                    // Is reference type REF - (BaseDMWGenerator.java:1115)
import org.dmd.wsdl.shared.generated.types.WsdlModuleREF;                       // Required to access defined in module name - (DMWGenerator.java:180)
import org.dmd.wsdl.shared.generated.types.WsdlServiceREF;                      // Is reference type REF - (BaseDMWGenerator.java:1115)



/**
 * The WsdlDescription defines a web service.
 * <P>
 * Generated from the dmwsdl schema at version unknown
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:479)
 */
abstract public class WsdlDescriptionDMW extends WsdlDefinition implements DmcDefinitionIF, DmcNamedObjectIF {

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:558)
    public WsdlDescriptionDMW() {
        super(new WsdlDescriptionDMO(), org.dmd.wsdl.server.generated.DmwsdlSchemaAG._WsdlDescription);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:564)
    public WsdlDescriptionDMW(DmcTypeModifierMV mods) {
        super(new WsdlDescriptionDMO(mods), org.dmd.wsdl.server.generated.DmwsdlSchemaAG._WsdlDescription);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:606)
    public WsdlDescription getModificationRecorder(){
        WsdlDescription rc = new WsdlDescription();
        rc.setName(getName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:627)
    public WsdlDescriptionDMW(WsdlDescriptionDMO obj) {
        super(obj, org.dmd.wsdl.server.generated.DmwsdlSchemaAG._WsdlDescription);
    }

    public WsdlDescription cloneIt() {
        WsdlDescription rc = new WsdlDescription();
        rc.setDmcObject(getDMO().cloneIt());
        return(rc);
    }

    public WsdlDescriptionDMO getDMO() {
        return((WsdlDescriptionDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:642)
    protected WsdlDescriptionDMW(WsdlDescriptionDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.getAccessFunctions(BaseDMWGenerator.java:1297)
    public DefinitionName getObjectName(){
        return(((WsdlDescriptionDMO) core).getName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((WsdlDescriptionDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof WsdlDescriptionDMW){
            return( getObjectName().equals( ((WsdlDescriptionDMW) obj).getObjectName()) );
        }
        return(false);
    }

    /**
     * @return The number of String items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1671)
    public int getDescriptionSize(){
        return(((WsdlDescriptionDMO) core).getDescriptionSize());
    }

    /**
     * @return true if there are no StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1679)
    public boolean getDescriptionIsEmpty(){
        if (((WsdlDescriptionDMO) core).getDescriptionSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any StringDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1689)
    public boolean getDescriptionHasValue(){
        if (((WsdlDescriptionDMO) core).getDescriptionSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2107)
    public StringIterableDMW getDescriptionIterable(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__description);
        if (attr == null)
            return(StringIterableDMW.emptyList);
        
        return(new StringIterableDMW(((WsdlDescriptionDMO) core).getDescription()));
    }

    /**
     * Adds another description value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2133)
    public void addDescription(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).addDescription(value);
    }

    /**
     * Adds another description value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2143)
    public void addDescription(String value){
        ((WsdlDescriptionDMO) core).addDescription(value);
    }

    /**
     * Returns true if the collection contains the description value.
     * @param value A value compatible with String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2200)
    public boolean descriptionContains(String value){
        return(((WsdlDescriptionDMO) core).descriptionContains(value));
    }

    /**
     * @return A COPY of the collection of String objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2244)
    @SuppressWarnings("unchecked")
    public ArrayList<String> getDescriptionCopy(){
        DmcAttribute<?> attr = core.get(MetaDMSAG.__description);
        if (attr == null)
            return(new ArrayList<String>());
        
        ArrayList<String> rc = new ArrayList<String>(attr.getMVSize());
        
        Iterator<String> it = (Iterator<String>) attr.getMV();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Deletes a description value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2271)
    public void delDescription(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).delDescription(value);
    }

    /**
     * Deletes a description value.
     * @param value The String to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2280)
    public void delDescription(String value){
        ((WsdlDescriptionDMO) core).delDescription(value);
    }

    /**
     * Removes the description attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2292)
    public void remDescription(){
        ((WsdlDescriptionDMO) core).remDescription();
    }

    /**
     * @return A WsdlInterface object.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1434)
    public WsdlInterface getInterface(){
        WsdlInterfaceREF ref = ((WsdlDescriptionDMO) core).getInterface();
        if (ref == null)
            return(null);
        
        if (ref.getObject() == null)
            return(null);
        
        return((WsdlInterface)ref.getObject().getContainer());
    }

    /**
     * Sets the interface to the specified value.
     * @param value A value compatible with WsdlInterfaceREF
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1519)
    public void setInterface(WsdlInterface value) {
        ((WsdlDescriptionDMO) core).setInterface(value.getDMO());
    }

    /**
     * Sets the interface to the specified value.
     * @param value A value compatible with WsdlInterfaceREF
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1528)
    public void setInterface(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).setInterface(value);
    }

    /**
     * Removes the interface attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1619)
    public void remInterface(){
        ((WsdlDescriptionDMO) core).remInterface();
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1474)
    public DefinitionName getName(){
        return(((WsdlDescriptionDMO) core).getName());
    }

    /**
     * Sets name to the specified value.
     * @param value A value compatible with DmcTypeDefinitionName
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1584)
    public void setName(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).setName(value);
    }

    /**
     * Sets name to the specified value.
     * @param value DefinitionName
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1593)
    public void setName(DefinitionName value){
        ((WsdlDescriptionDMO) core).setName(value);
    }

    /**
     * Removes the name attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1619)
    public void remName(){
        ((WsdlDescriptionDMO) core).remName();
    }

    /**
     * @return The number of NameSpaceReference items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1671)
    public int getNameSpaceSize(){
        return(((WsdlDescriptionDMO) core).getNameSpaceSize());
    }

    /**
     * @return true if there are no NameSpaceReferenceDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1679)
    public boolean getNameSpaceIsEmpty(){
        if (((WsdlDescriptionDMO) core).getNameSpaceSize() == 0)
            return(true);
        return(false);
    }

    /**
     * @return true if there are any NameSpaceReferenceDMO items.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:1689)
    public boolean getNameSpaceHasValue(){
        if (((WsdlDescriptionDMO) core).getNameSpaceSize() == 0)
            return(false);
        return(true);
    }

    /**
     * @return An Iterator of NameSpaceReference objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2107)
    public NameSpaceReferenceIterableDMW getNameSpaceIterable(){
        DmcAttribute<?> attr = core.get(DmwsdlDMSAG.__nameSpace);
        if (attr == null)
            return(NameSpaceReferenceIterableDMW.emptyList);
        
        return(new NameSpaceReferenceIterableDMW(((WsdlDescriptionDMO) core).getNameSpace()));
    }

    /**
     * Adds another nameSpace value.
     * @param value A value compatible with NameSpaceReference
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2133)
    public void addNameSpace(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).addNameSpace(value);
    }

    /**
     * Adds another nameSpace value.
     * @param value A value compatible with NameSpaceReference
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2143)
    public void addNameSpace(NameSpaceReference value){
        ((WsdlDescriptionDMO) core).addNameSpace(value);
    }

    /**
     * Returns true if the collection contains the nameSpace value.
     * @param value A value compatible with NameSpaceReference
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2200)
    public boolean nameSpaceContains(NameSpaceReference value){
        return(((WsdlDescriptionDMO) core).nameSpaceContains(value));
    }

    /**
     * @return A COPY of the collection of NameSpaceReference objects.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2244)
    @SuppressWarnings("unchecked")
    public ArrayList<NameSpaceReference> getNameSpaceCopy(){
        DmcAttribute<?> attr = core.get(DmwsdlDMSAG.__nameSpace);
        if (attr == null)
            return(new ArrayList<NameSpaceReference>());
        
        ArrayList<NameSpaceReference> rc = new ArrayList<NameSpaceReference>(attr.getMVSize());
        
        Iterator<NameSpaceReference> it = (Iterator<NameSpaceReference>) attr.getMV();
        while(it.hasNext()){
            rc.add(it.next());
        }
        
        return(rc);
    }

    /**
     * Deletes a nameSpace value.
     * @param value The NameSpaceReference to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2271)
    public void delNameSpace(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).delNameSpace(value);
    }

    /**
     * Deletes a nameSpace value.
     * @param value The NameSpaceReference to be deleted from set of attribute values.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2280)
    public void delNameSpace(NameSpaceReference value){
        ((WsdlDescriptionDMO) core).delNameSpace(value);
    }

    /**
     * Removes the nameSpace attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatMV(BaseDMWGenerator.java:2292)
    public void remNameSpace(){
        ((WsdlDescriptionDMO) core).remNameSpace();
    }

    /**
     * @return A WsdlService object.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1434)
    public WsdlService getService(){
        WsdlServiceREF ref = ((WsdlDescriptionDMO) core).getService();
        if (ref == null)
            return(null);
        
        if (ref.getObject() == null)
            return(null);
        
        return((WsdlService)ref.getObject().getContainer());
    }

    /**
     * Sets the service to the specified value.
     * @param value A value compatible with WsdlServiceREF
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1519)
    public void setService(WsdlService value) {
        ((WsdlDescriptionDMO) core).setService(value.getDMO());
    }

    /**
     * Sets the service to the specified value.
     * @param value A value compatible with WsdlServiceREF
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1528)
    public void setService(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).setService(value);
    }

    /**
     * Removes the service attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1619)
    public void remService(){
        ((WsdlDescriptionDMO) core).remService();
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1474)
    public String getServiceTitle(){
        return(((WsdlDescriptionDMO) core).getServiceTitle());
    }

    /**
     * Sets serviceTitle to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1584)
    public void setServiceTitle(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).setServiceTitle(value);
    }

    /**
     * Sets serviceTitle to the specified value.
     * @param value String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1593)
    public void setServiceTitle(String value){
        ((WsdlDescriptionDMO) core).setServiceTitle(value);
    }

    /**
     * Removes the serviceTitle attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1619)
    public void remServiceTitle(){
        ((WsdlDescriptionDMO) core).remServiceTitle();
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1474)
    public String getTargetNameSpace(){
        return(((WsdlDescriptionDMO) core).getTargetNameSpace());
    }

    /**
     * Sets targetNameSpace to the specified value.
     * @param value A value compatible with DmcTypeString
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1584)
    public void setTargetNameSpace(Object value) throws DmcValueException {
        ((WsdlDescriptionDMO) core).setTargetNameSpace(value);
    }

    /**
     * Sets targetNameSpace to the specified value.
     * @param value String
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1593)
    public void setTargetNameSpace(String value){
        ((WsdlDescriptionDMO) core).setTargetNameSpace(value);
    }

    /**
     * Removes the targetNameSpace attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1619)
    public void remTargetNameSpace(){
        ((WsdlDescriptionDMO) core).remTargetNameSpace();
    }

    // Generated from: org.dmd.dmg.generators.DMWGenerator.dumpAdditionalWrapperFunctions(DMWGenerator.java:221)
    /**
     * This method indicates the name of the module from which this definition was loaded.
     */
    @Override
    public String getNameOfModuleWhereThisCameFrom(){
        WsdlModuleREF ref = ((WsdlDescriptionDMO) core).getDefinedInWsdlModule();
        return(ref.getName().getNameString());
    }


}
